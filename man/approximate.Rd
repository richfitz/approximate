% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/approximate.R
\name{approximate}
\alias{approximate}
\title{Approximate function with a spline}
\usage{
approximate(target, a, b, ..., method = "fmm", n_base = 17L,
  max_depth = 16L, atol = tol, rtol = tol, verbose = FALSE,
  tol = sqrt(.Machine$double.eps), target_vectorised = TRUE,
  inverse = FALSE)
}
\arguments{
\item{target}{A function to approximate}

\item{a}{The lower bound of the interpolation}

\item{b}{The upper bound of the interpolation}

\item{...}{Additional arguments passed through to \code{target}}

\item{method}{The method of interpolation to used; passed through
to \code{\link{splinefun}}}

\item{n_base}{The number of equally spaced points to start with}

\item{max_depth}{The number of times the base points will be
subdivided, at most.}

\item{atol}{The absolute tolerance; used to determine how the
approximation is doing for values with small absolute value.}

\item{rtol}{The relative tolerance' used to determine how the
approximation is doing for values with large absolute value.}

\item{verbose}{Be verbose when fitting the spline?  This might be
useful on expensive functions.}

\item{tol}{The default value for \code{atol} and \code{rtol}; use
this to set both at once.}

\item{target_vectorised}{Flag indicating if \code{target} can
accept a vector of \code{x} values; the default, \code{TRUE},
assumes that it can.  If your function requires each \code{x}
value separately set this to \code{FALSE}.}

\item{inverse}{Indicates if the \emph{inverse} approximate
function is required.  This is useful if you can use
\code{target} to map x to y but you want the inverse mapping
back.  \code{a} and \code{b} will be the domain of \code{x}
still (so the range of \code{y}, and the domain of the returned
function).}
}
\description{
Approximate a function by a spline, refined to a given tolerance
}
\author{
Rich FitzJohn
}

